nextflow_process {

    name "Test Process DECOUPLER_PROGENY"
    script "../main.nf"
    process "DECOUPLER_PROGENY"

    tag "modules"
    tag "modules_nfcore"
    tag "decoupler"
    tag "decoupler/progeny"

    test("decoupler_progeny_test") {

        when {
            process {
                """
                input[0] = [
                    [ id: 'test' ],
                    file("https://github.com/nf-core/test-datasets/raw/modules/data/genomics/homo_sapiens/scrnaseq/h5ad/pbmc3k.h5ad", checkIfExists: true)
                ]
                input[1] = Channel.value("human")
                input[2] = Channel.value("1000")
                """
            }
        }

        then {
            assertAll(
                { assert process.success },
                { assert snapshot(
                    file(process.out.dc_estimate[0][1]).name,
                    file(process.out.dc_pvals[0][1]).name,
                    file(process.out.dc_acts[0][1]).name,
                    file(process.out.dc_umap[0][1]).name,
                    file(process.out.dc_violin[0][1]).name,
                    file(process.out.dc_matrixplot[0][1]).name,
                    process.out.versions
                ).match() }
            )
        }

    }

        test("decoupler_progeny_stub") {
        options "-stub"

        when {
            process {
                """
                input[0] = [
                    [ id: 'test' ],
                    file("https://github.com/nf-core/test-datasets/raw/modules/data/genomics/homo_sapiens/scrnaseq/h5ad/pbmc3k.h5ad", checkIfExists: true)
                ]
                input[1] = Channel.value("human")
                input[2] = Channel.value("1000")
                """
            }
        }

        then {
            assertAll(
                { assert process.success },
                { assert snapshot(process.out).match() }
            )
        }
    }

}
